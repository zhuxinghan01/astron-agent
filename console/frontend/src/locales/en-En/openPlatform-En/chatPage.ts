const transition = {
  chatHeader: {
    cancelFavoriteSuccess: 'Successfully canceled favorite!',
    cancelFavoriteFailed: 'Failed to cancel favorite!',
    favoriteSuccess: 'Successfully favorited!',
    favoriteFailed: 'Failed to favorite',
    answering: 'Answering in progress~',
    cancelLikeSuccess: 'Like canceled',
    cancelLikeFailed: 'Failed to cancel like',
    likeSuccess: 'Successfully liked!',
    likeFailed: 'Failed to like',
    liked: 'Liked',
    like: 'Like',
    collect: 'Favorite',
    share: 'Share',
    statusPublishing: 'In Release',
    statusPublished: 'Released',
    statusRejected: 'Rejected',
    statusUnpublished: 'Unreleased',
    draftVersion: 'Draft Version',
  },
  chatSide: {
    configuration: 'Configuration',
    tool: 'Tool',
    knowledgeBase: 'Knowledge Base',
    workflow: 'Workflow',
    webSearch: 'Web Search',
    aiImage: 'AI Image Generation',
    codeGeneration: 'Code Generation',
    sparkModel: 'Spark Model',
    deepseekR1Model: 'DeepSeek R1 Model',
    deepseekV3Model: 'DeepSeek V3 Model',
    gemmaModel: 'Gemma Model',
    qwenModel: 'Qwen Model',
    toolCalling: 'Tool Calling',
  },
  chatBottom: {
    feedbackSuccess: 'Feedback submitted successfully',
    feedbackFailed: 'Failed to submit feedback, please try again later',
    stopReading: 'Stop Reading',
    read: 'Read',
    copy: 'Copy',
    reAnswer: 'Re-answer',
  },
  chatWindow: {
    clearChatHistoryFailed: 'Failed to clear chat history',
    confirm: 'Confirm',
    cancel: 'Cancel',
    answeringInProgress: 'Answering in progress...',
    uploadingInProgress: 'Uploading in progress...',
    stopFailed: 'Stop failed!',
    cancelFailed: 'Cancel failed!',
    deleteErrorFileFirst: 'Please delete the error file first',
    uploadFileFirst: 'Please upload a file first',
    fileUploadFailed: 'File upload failed',
    uploading: 'Uploading...',
    processing: 'Processing...',
    newChat: 'New Chat',
    clearChatHistory: 'Clear Chat History',
    confirmDeleteChat: 'Confirm delete chat history?',
    stopOutput: 'Stop',
    defaultPlaceholder: 'Please enter your question...',
    selectOptionFirst: 'Please select an option first',
    uploadTooltip:
      'Supports uploading {{accept}}, max {{size}}MB, up to {{count}} file',
    fileLimitTip: '{{name}} type file can only upload {{limit}} files',
    fileSizeExceeded:
      'File {{name}} exceeds size limit, maximum supported {{size}}MB',
    unsupportedFileType: '{{name}} is an unsupported file type',
    bindingCancelled: 'Binding cancelled',
    bindingFailed: 'Binding failed',
    uploadFailed: 'Upload failed',
    networkError: 'Network error',
    getSignedUrlFailed: 'Failed to get signed URL',
    uploadCancelled: 'Upload cancelled',
    download: 'Download',
    expand: 'Expand',
    fold: 'Fold',
    deleteFile: 'Delete File',
    cancelUpload: 'Cancel Upload',
    pleaseSelectOption: 'Please select an option~',
  },
  feedbackPopover: {
    feedbackTitle: 'Your feedback helps us improve',
    likeReasonPlaceholder: 'Why do you like this response?',
    improveSuggestionPlaceholder: 'What would be a better response?',
    submitButton: 'Submit Feedback',
    accurateProfessional: 'Accurate and professional',
    clearUnderstandable: 'Clear and easy to understand',
    fastResponse: 'Fast response speed',
    pleaseSelectOrEnterFeedback:
      'Please select at least one feedback option or enter feedback content',
  },
  deepThinkProgress: {
    title: 'Thinking and Action Process',
    endTip: 'Thinking complete, here is your answer',
  },
  MathThinkProgress: {
    thinking: 'Thinking in progress',
    waitingAnswer: 'Generating answer...',
  },
  sourceInfoBox: {
    sourceReference: 'Source: {{count}} articles were obtained as references.',
  },
};

export default transition;
